/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ActivityTemplate as PrismaActivityTemplate,
} from "@prisma/client";
import { ActivityTemplateDto } from "../ActivityTemplateDto";

export class ActivityTemplateServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ActivityTemplateCountArgs, "select">
  ): Promise<number> {
    return this.prisma.activityTemplate.count(args);
  }

  async activityTemplates(
    args: Prisma.ActivityTemplateFindManyArgs
  ): Promise<PrismaActivityTemplate[]> {
    return this.prisma.activityTemplate.findMany(args);
  }
  async activityTemplate(
    args: Prisma.ActivityTemplateFindUniqueArgs
  ): Promise<PrismaActivityTemplate | null> {
    return this.prisma.activityTemplate.findUnique(args);
  }
  async createActivityTemplate(
    args: Prisma.ActivityTemplateCreateArgs
  ): Promise<PrismaActivityTemplate> {
    return this.prisma.activityTemplate.create(args);
  }
  async updateActivityTemplate(
    args: Prisma.ActivityTemplateUpdateArgs
  ): Promise<PrismaActivityTemplate> {
    return this.prisma.activityTemplate.update(args);
  }
  async deleteActivityTemplate(
    args: Prisma.ActivityTemplateDeleteArgs
  ): Promise<PrismaActivityTemplate> {
    return this.prisma.activityTemplate.delete(args);
  }
  async CreateActivityTemplate(
    args: ActivityTemplateDto
  ): Promise<ActivityTemplateDto> {
    throw new Error("Not implemented");
  }
}
